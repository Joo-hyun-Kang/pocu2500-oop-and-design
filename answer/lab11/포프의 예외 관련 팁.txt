실습 11을 하면서 궁금한게 있었는데요. 1. 제공되었던 내부 warehouse나 user클래스 생성자에서 exception을 내는 코드가 실제 활용이 되는 코드인가요? 2. 저도 실습을 하면서 run 함수에 많은 try catch문을 사용하게 되었는데 결국 이렇게 경계값을 체크하는 코드는 try catch문이 많아지는게 정상인지 아니면 조금더 효율적으로 동작할 수 있는 방법이 있을까요? (edited) 
5 replies


[강사] 포프
  23 days ago
1. 네 그렇습니다. 같은 데이터에 동시 write 접근 하는 걸 예외 발생없이 해결하려면 어딘가 lock을 걸어야 하는데(한번에 한명만 그 값을 변경할 수 있도록) 분산시스템에서는 그러기가 쉽지 않아요.


[강사] 포프
  23 days ago
이런 예가 잘 정리되어 있는 문서 하나를 소개: https://learn.microsoft.com/ko-kr/ef/core/saving/concurrency?tabs=data-annotations
learn.microsoft.comlearn.microsoft.com
동시성 충돌 처리 - EF Core
Entity Framework Core에서 동일한 데이터가 동시에 업데이트될 때 충돌 관리
:pray:
1
:bow:
1



[강사] 포프
  23 days ago
2. try catch문이 많아지는건 정상일수도 아닐 수도 있습니다. 이건 지금 작성중인 해당 예외의 처리를 어떻게 하는게 "올바른" 방법이냐라는 팀원간의 동의가 있어야 합니다.
아예 프로그램을 뻗게 만드는 방법도 요즘 많이 사용하는 방법이거든요. (대표적인 예가 여기저기 웹 서핑하다가 나오는 5xx 오류, 4xx 오류) 이런 경우는 try/catch가 필요없죠.


[강사] 포프
  23 days ago
또하나 try하고 catch 속에 들어가는 코드들을 별도의 함수로 뽑아 가독성을 높이는 방법도 있습니다. (클린코드란 책에도 소개되어 있음). 하지만 재활용성 없는 코드를 함수로 만드는 방법이기에 그에 따른 단점도 당연히 있습니다.
:face_with_spiral_eyes:
1



Junseok Seo
  22 days ago
항상 좋은 답변 감사드립니다 포프님 :slightly_smiling_face:


강의를 듣고나서도 아직 잘 이해를 못한 부분이 있어서 여쭈어보고 싶은게 있는데요. 예외와 오류는 결국에 같은 뜻이라고 생각해도 될까요? (edited) 
2 replies


oakmura
  19 days ago
예외 상황과 오류 상황은 같은 뜻이라고 생각해도 될것같습니다.
하지만 프로그래밍 언어의 '예외'와 오류상황은 다른 뜻입니다.
'오류 상황, 예외 상황' 강의를 참고해서 말씀드리자면,
happy path가 아닌 상황을 '예외 상황' 또는 '오류 상황'이라고 부릅니다.
두 단어는 같은 의미로 쓰입니다.
하지만, 이런 '예외 상황' 을 프로그래밍 언어의 예외(Exception)와 혼동해서 사용되는 경우가 있는데
이 '예외'는 '예외 상황'과 다릅니다.
프로그래밍 언어의 '예외'는 크게 4가지로 분류되는 오류 처리 방법 중 하나입니다.
:raised_hands:
1



Junseok Seo
  19 days ago
아하 그렇군요. 예외 상황과 예외가 같을거다라고 생각했었는데 오카무라님 말씀을 통해서 어떻게 받아들여야 할지 개념이 잡혔습니다
:+1:
1

