oakmura
 Nov 14th at 9:59 AM
너무 부족한 코드이지만.. 공유합니다!
어느정도 규모있는 시스템을 (제 기준에서..) 설계/구현 해보니 정말 많은걸 배우고 경험했습니다. 그 중에서도 특히 많이 느낀건
assert가 정말 많이 도움된다
중복되는 코드는 실수를 유발한다
자신만의 코딩 규칙을 정해서 내부에 유효한 데이터만 돌게하면 불필요한 생각을 줄여준다
등등.. 사실 성능을 위해서 어떻게 더 코드를 다듬어야할지, 실수를 방지하기 위해서 final을 붙히기, 맴버 변수들을 private으로 할지 protected로 할지 이것저것 신경쓸게 너무 많았지만 ㅠ..ㅠ
생각보다 코드가 잘 동작하게만 만드는데도 너무 시간이 오래걸려서 제대로 다듬질 못했네요 (특히 시계방향으로 적을 찾는 알고리즘은 arctan으로 각도를 구해서 찾는 방식으로 구현했으면 Unit클래스 한군데에만 정의했어도 됐을텐데.. 괜히 고치다 점수가 날라갈까봐 손을 못대겠더라구요)
여튼.. 다들 고생하셨습니다 :pray:
한군데를 고치면, 다른곳이 뻥뻥 터지는 경험 많이했네욤 ..
추가적으로, 학생 수준에서 이런 프로젝트 경험을 해봤다는게 정말 행운인 것 같습니다. 이 정도 규모의 과제가 잘 설계되어있는지, 잘 구현되어 있는지를 채점해주고, 좋은 디버깅 환경까지 제공되는 커리큘럼이 또 있을까 싶네요..
좋은 커리큘럼 제공해주셔서 감사합니당 :bow: (edited) 
제목 없음
 
Unit.java ------------------------------------------------
​
public abstract class Unit {
    protected IntVector2D position;
    protected final char symbol;
Click to expand inline (1,313 lines)


:+1:
11

2 replies


oakmura
  2 months ago
enum, interface, IntVector2D && AttackIntent 클래스들입니당
제목 없음
 


oakmura
  2 months ago
제 코드에서 공격이 각 유닛들에게 피해를 입히는 로직은 다음과 같습니다
AttackIntent에서 아래의 것들을 맴버 변수로 들고있고,
누가 때리는지
2. hashmap<position, damage>, 각 위치별 얼마만큼의 데미지를 줘야하는지
해당 공격이 어떤 UnitType 에게 피해를 입힐수 있는지
그리고, SimulationManager에서 반환된 '공격 의도' 개체들을 순회하면서 각 유닛이 해당 hashmap key (공격 받아야할 위치) + 자신이 그 공격에 피해를 입을수 있는 UnitType 이면 피해가 적용되게 구현했습니다 (edited) 







